/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_MEDIASERVERSTUB_H_
#define JSONRPC_CPP_STUB_MEDIASERVERSTUB_H_

#include <jsonrpccpp/server.h>

class mediaserverstub : public jsonrpc::AbstractServer<mediaserverstub>
{
    public:
        mediaserverstub(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<mediaserverstub>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("toJsonFile", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::toJsonFileI);
            this->bindAndAddMethod(jsonrpc::Procedure("initLibraryFromJsonFile", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::initLibraryFromJsonFileI);
            this->bindAndAddMethod(jsonrpc::Procedure("parseURLtoJSON", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::parseURLtoJSONI);
            this->bindAndAddMethod(jsonrpc::Procedure("removeSeries", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::removeSeriesI);
            this->bindAndAddMethod(jsonrpc::Procedure("addEpisode", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::addEpisodeI);
            this->bindAndAddMethod(jsonrpc::Procedure("removeEpisode", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_BOOLEAN, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::removeEpisodeI);
            this->bindAndAddMethod(jsonrpc::Procedure("getSeries", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::getSeriesI);
            this->bindAndAddMethod(jsonrpc::Procedure("getEpisode", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_OBJECT, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::getEpisodeI);
            this->bindAndAddMethod(jsonrpc::Procedure("getEpisodeListSize", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_INTEGER, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::getEpisodeListSizeI);
            this->bindAndAddMethod(jsonrpc::Procedure("getLibraryTitles", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_ARRAY,  NULL), &mediaserverstub::getLibraryTitlesI);
            this->bindAndAddMethod(jsonrpc::Procedure("getEpisodeTitles", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_ARRAY, "param1",jsonrpc::JSON_STRING, NULL), &mediaserverstub::getEpisodeTitlesI);
        }

        inline virtual void toJsonFileI(const Json::Value &request, Json::Value &response)
        {
            response = this->toJsonFile(request[0u].asString());
        }
        inline virtual void initLibraryFromJsonFileI(const Json::Value &request, Json::Value &response)
        {
            response = this->initLibraryFromJsonFile(request[0u].asString());
        }
        inline virtual void parseURLtoJSONI(const Json::Value &request, Json::Value &response)
        {
            response = this->parseURLtoJSON(request[0u].asString());
        }
        inline virtual void removeSeriesI(const Json::Value &request, Json::Value &response)
        {
            response = this->removeSeries(request[0u].asString());
        }
        inline virtual void addEpisodeI(const Json::Value &request, Json::Value &response)
        {
            response = this->addEpisode(request[0u].asString());
        }
        inline virtual void removeEpisodeI(const Json::Value &request, Json::Value &response)
        {
            response = this->removeEpisode(request[0u].asString());
        }
        inline virtual void getSeriesI(const Json::Value &request, Json::Value &response)
        {
            response = this->getSeries(request[0u].asString());
        }
        inline virtual void getEpisodeI(const Json::Value &request, Json::Value &response)
        {
            response = this->getEpisode(request[0u].asString());
        }
        inline virtual void getEpisodeListSizeI(const Json::Value &request, Json::Value &response)
        {
            response = this->getEpisodeListSize(request[0u].asString());
        }
        inline virtual void getLibraryTitlesI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->getLibraryTitles();
        }
        inline virtual void getEpisodeTitlesI(const Json::Value &request, Json::Value &response)
        {
            response = this->getEpisodeTitles(request[0u].asString());
        }
        virtual bool toJsonFile(const std::string& param1) = 0;
        virtual bool initLibraryFromJsonFile(const std::string& param1) = 0;
        virtual bool parseURLtoJSON(const std::string& param1) = 0;
        virtual bool removeSeries(const std::string& param1) = 0;
        virtual bool addEpisode(const std::string& param1) = 0;
        virtual bool removeEpisode(const std::string& param1) = 0;
        virtual Json::Value getSeries(const std::string& param1) = 0;
        virtual Json::Value getEpisode(const std::string& param1) = 0;
        virtual int getEpisodeListSize(const std::string& param1) = 0;
        virtual Json::Value getLibraryTitles() = 0;
        virtual Json::Value getEpisodeTitles(const std::string& param1) = 0;
};

#endif //JSONRPC_CPP_STUB_MEDIASERVERSTUB_H_
